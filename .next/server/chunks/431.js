"use strict";exports.id=431,exports.ids=[431],exports.modules={4431:(e,t,r)=>{r.d(t,{Q:()=>usePrints});var a=r(9885),o=r(6310);function usePrints(e){let[t,r]=(0,a.useState)([]),[l,i]=(0,a.useState)(!0),[s,n]=(0,a.useState)(null),[d,u]=(0,a.useState)([]),c=(0,a.useCallback)(async()=>{try{i(!0),n(null);let e=await (0,o.fH)(null);r(e.reverse());let t=await (0,o.tG)();u(t)}catch(e){n(e instanceof Error?e.message:"Failed to load prints"),console.error("Failed to load prints:",e)}finally{i(!1)}},[]),f=(0,a.useCallback)(async(e,t)=>{try{let a=await (0,o.LR)(e,t);if(a)return r(r=>r.map(r=>r.id===e?{...r,category_name:t}:r)),!0;return!1}catch(e){return console.error("Failed to update category:",e),!1}},[]),g=(0,a.useCallback)(async e=>{try{let t=await (0,o.V6)(e);if(t)return r(t=>t.filter(t=>t.id!==e)),!0;return!1}catch(e){return console.error("Failed to delete print:",e),!1}},[]),p=(0,a.useCallback)(()=>{c()},[c]);return(0,a.useEffect)(()=>{c()},[c]),{prints:t,isLoading:l,error:s,updateCategory:f,removePrint:g,refreshPrints:p,categories:d}}},6310:(e,t,r)=>{r.d(t,{L2:()=>uploadMultiplePrints,LR:()=>updatePrintCategory,V6:()=>deletePrint,d0:()=>getPrintById,fH:()=>getAllPrints,tG:()=>getAllCategories});var a=r(9708);let o="prints",l="prints",i="categories";async function getAllCategories(){let{data:e,error:t}=await a.O.from(i).select("*").order("name",{ascending:!0});if(t)throw Error(`Failed to fetch categories: ${t.message}`);return e}async function uploadPrint(e,t,r){if(console.log(`[uploadPrint] Starting upload for file: ${e.name}, type: ${e.type}, size: ${e.size}`),!e.type.startsWith("image/")&&"application/pdf"!==e.type)throw console.error(`[uploadPrint] Invalid file type: ${e.type}`),Error("Only image files and PDFs are supported");if(e.size>10485760)throw console.error(`[uploadPrint] File size exceeds limit: ${e.size} bytes`),Error("File size must be less than 10MB");let s=`${Date.now()}-${e.name}`;console.log(`[uploadPrint] Generated filePath: ${s}`),console.log(`[uploadPrint] Attempting to upload to Supabase Storage bucket: ${o}`);let{data:n,error:d}=await a.O.storage.from(o).upload(s,e,{cacheControl:"3600",upsert:!1});if(d)throw console.error(`[uploadPrint] Failed to upload file to storage: ${d.message}`,d),Error(`Failed to upload file: ${d.message}`);console.log("[uploadPrint] File uploaded to storage successfully:",n),console.log(`[uploadPrint] Attempting to get public URL for filePath: ${s}`);let{data:u}=a.O.storage.from(o).getPublicUrl(s);if(!u||!u.publicUrl)throw console.error("[uploadPrint] Failed to get public URL after upload. publicUrlData:",u),Error("Failed to get public URL after upload.");let c=u.publicUrl;console.log(`[uploadPrint] Public URL obtained: ${c}`);let f=null;if(r){let{data:e,error:t}=await a.O.from(i).select("id").eq("name",r).single();if(t&&"PGRST116"!==t.code)throw console.error(`Failed to fetch category: ${t.message}`),Error(`Failed to process category: ${t.message}`);if(e)f=e.id;else{let{data:e,error:t}=await a.O.from(i).insert({name:r}).select().single();if(t)throw console.error(`Failed to create new category: ${t.message}`),Error(`Failed to create category: ${t.message}`);f=e.id}}console.log(`[uploadPrint] Attempting to insert print metadata into table: ${l}`);let{data:g,error:p}=await a.O.from(l).insert({url:c,filename:e.name,uploaded_at:new Date().toISOString(),family_member:t,category_id:f,metadata:{size:e.size,type:e.type}}).select();if(p){console.error(`[uploadPrint] Failed to save print metadata to DB: ${p.message}`,p),console.log(`[uploadPrint] Attempting to remove file from storage due to DB insert failure: ${s}`);let{error:e}=await a.O.storage.from(o).remove([s]);throw e?console.error(`[uploadPrint] Failed to remove file from storage after DB insert failure: ${e.message}`,e):console.log(`[uploadPrint] File successfully removed from storage: ${s}`),Error(`Failed to save print metadata: ${p.message}`)}return console.log("[uploadPrint] Print metadata inserted successfully:",g),c}async function getAllPrints(e){let t=a.O.from(l).select("*, category:categories(name)").order("uploaded_at",{ascending:!1});e&&(t=t.eq("family_member",e));let{data:r,error:o}=await t;if(o)throw Error(`Failed to fetch prints: ${o.message}`);return r.map(e=>({...e,category_name:e.category?e.category.name:void 0}))}async function getPrintById(e){let{data:t,error:r}=await a.O.from(l).select("*, category:categories(name)").eq("id",e).single();if(r){if("PGRST116"===r.code)return null;throw Error(`Failed to fetch print by ID: ${r.message}`)}return{...t,category_name:t.category?t.category.name:void 0}}async function deletePrint(e){let{data:t,error:r}=await a.O.from(l).select("filename, url").eq("id",e).single();if(r)throw Error(`Failed to fetch print for deletion: ${r.message}`);if(!t)return!1;let i=t.url.split("/"),s=i[i.length-1],{error:n}=await a.O.storage.from(o).remove([s]);n&&console.warn(`Failed to delete file from storage: ${n.message}`);let{error:d}=await a.O.from(l).delete().eq("id",e);if(d)throw Error(`Failed to delete print from database: ${d.message}`);return!0}async function updatePrintCategory(e,t){let r=null;if(t){let{data:e,error:o}=await a.O.from(i).select("id").eq("name",t).single();if(o)throw Error(`Failed to find category ID for name ${t}: ${o.message}`);r=e.id}let{data:o,error:s}=await a.O.from(l).update({category_id:r}).eq("id",e).select();if(s)throw Error(`Failed to update print category: ${s.message}`);return null!==o&&o.length>0}async function uploadMultiplePrints(e,t,r){console.log(`[uploadMultiplePrints] Starting batch upload for ${e.length} files.`);let a=e.map(e=>uploadPrint(e,t,r)),o=await Promise.allSettled(a),l=[];return o.forEach((t,r)=>{"fulfilled"===t.status?(console.log(`[uploadMultiplePrints] File ${e[r].name} uploaded successfully. URL: ${t.value}`),l.push(t.value)):console.error(`[uploadMultiplePrints] File ${e[r].name} failed to upload. Reason:`,t.reason)}),console.log(`[uploadMultiplePrints] Batch upload finished. Successfully uploaded ${l.length} of ${e.length} files.`),l}}};